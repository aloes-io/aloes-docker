worker_processes 4;

events { 
	worker_connections 1024; 
}

http {

	map $http_origin $cors_header {
	    default "";
	    "~^https?://[^/]+\.${NGINX_DOMAIN}\.${NGINX_EXTENSION}(:[0-9]+)?$" "$http_origin";
	}

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

	upstream aloes_clients {
	    server client:${HTTP_CLIENT_PORT};
	}

	upstream aloes_http_api_servers {
	    server api:${HTTP_SERVER_PORT};
	    # server aloes-docker_api_1:8000 weight=1;
	}

	upstream aloes_ws_api_servers {
	    server api:${WS_BROKER_PORT};
	}

	server {
	    listen ${NGINX_HTTP_SERVER_PORT};
	    listen [::]:${NGINX_HTTP_SERVER_PORT};
	    server_name ${NGINX_HTTP_SERVER_HOST};

        location / {
            # proxy_pass http://aloes_clients;
            # proxy_redirect off;
            # proxy_http_version 1.1;
            return 301 https://$host/$request_uri;
        }

        location /app/ {
            return 301 https://$host/app/$request_uri;
        }  

	    location /.well-known/acme-challenge/ {
	        root /var/www/certbot;
	    }
	}

	server {
	    server_name ${NGINX_HTTP_SERVER_HOST};
	    listen ${NGINX_HTTPS_SERVER_PORT} ssl;
        listen [::]:${NGINX_HTTPS_SERVER_PORT} ssl ipv6only=on; 

        # following statements will be valid after running ./config/certbot/letsencrypt-init.sh
	    ssl_certificate /etc/letsencrypt/live/${NGINX_HTTP_SERVER_HOST}/fullchain.pem; 
	    ssl_certificate_key /etc/letsencrypt/live/${NGINX_HTTP_SERVER_HOST}/privkey.pem;
	    include /etc/letsencrypt/options-ssl-nginx.conf;
	    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # access_log /etc/nginx/log/access.${NGINX_HTTP_SERVER_HOST}.log;
        error_log /etc/nginx/log/error.${NGINX_HTTP_SERVER_HOST}.log warn;
	    
        location / {
	        # proxy_set_header Access-Control-Allow-Origin $cors_header;
	        proxy_pass http://aloes_clients;
	        proxy_redirect off;
	        proxy_http_version 1.1;
        }

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        }

	    location /app/ {
	        proxy_set_header Access-Control-Allow-Origin $cors_header;
	        proxy_set_header Host $host;
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
	        proxy_pass http://aloes_http_api_servers/;
		    proxy_redirect off;
	        proxy_http_version 1.1;
	    }

	    location /ws {
            proxy_set_header Access-Control-Allow-Origin $cors_header;
	        proxy_set_header Host $host;
	        proxy_set_header X-Real-IP $remote_addr;
	        proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;
	        proxy_pass http://aloes_ws_api_servers;
	        proxy_redirect off;
	        proxy_http_version 1.1;
	        proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
	    }  
	}

}