version: '3.7'

networks:
  skyring:
    driver: bridge

services:
  mongo:
    env_file: ./config/mongo/.env
    image: mongo:4.1.13
    restart: always
    volumes:
      - ./config/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongovolume:/data/db

  influxdb:
    env_file: ./config/influxdb/.env
    image: influxdb:1.7-alpine
    restart: always
    volumes:
      - influxvolume:/var/lib/influxdb

  redis:
    image: redis:5-alpine
    restart: always
    volumes:
      - redisvolume:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ['redis-server', '/usr/local/etc/redis/redis.conf']

  timer-1:
    build:
      context: https://github.com/esatterwhite/skyring.git#master
    hostname: timer-1
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-1
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c

  timer-2:
    build:
      context: https://github.com/esatterwhite/skyring.git#master
    hostname: timer-2
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-2
      - channel__port=3456
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=memdown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c

  timer-3:
    build:
      context: https://github.com/esatterwhite/skyring.git#master
    hostname: timer-3
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-3
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2

  timer-4:
    build:
      context: https://github.com/esatterwhite/skyring.git#master
    hostname: timer-4
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-4
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2

  timer-5:
    build:
      context: https://github.com/esatterwhite/skyring.git#master
    hostname: timer-5
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-5
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2
      - timer-3
      - timer-4

  nats-a:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    command: >
      -c /tmp/a.conf -D
    networks:
      - skyring

  nats-b:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    command: >
      -c /tmp/b.conf -D
    depends_on:
      - nats-a
    networks:
      - skyring

  nats-c:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    depends_on:
      - nats-a
    command: >
      -c /tmp/c.conf -D
    networks:
      - skyring

  timer-proxy:
    image: 'nginx:latest'
    restart: always
    volumes:
      - ./config/nginx/skyring.conf:/etc/nginx/nginx.conf
    ports:
      - '${TIMER_PORT}:80'
    networks:
      - skyring
    depends_on:
      - timer-1
      - timer-2
      - timer-3
      - timer-4
      - timer-5
  
  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  api:
    env_file: ./config/device-manager/.env
    build:
      context: https://framagit.org/aloes/device-manager.git#master
      dockerfile: local.dockerfile
    image: device-manager:stage
    restart: always
    depends_on:
      - mongo
      - influxdb
      - redis
      - timer-proxy
    expose:
      - '${HTTP_SERVER_PORT}'
      - '${MQTT_BROKER_PORT}'
      - '${MQTTS_BROKER_PORT}'
      - '${WS_BROKER_PORT}'
    ports:
      - '${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}'
      - '${MQTT_BROKER_PORT}:${MQTT_BROKER_PORT}'
      - '${MQTTS_BROKER_PORT}:${MQTTS_BROKER_PORT}'
      - '${WS_BROKER_PORT}:${WS_BROKER_PORT}'
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
      - ./config/certbot/conf/live/${NGINX_HTTP_SERVER_HOST}/privkey.pem:/home/node/device-manager/device-manager-prod-key.pem:ro
      - ./config/certbot/conf/live/${NGINX_HTTP_SERVER_HOST}/fullchain.pem:/home/node/device-manager/device-manager-prod-cert.pem:ro
      - apivolume:/home/node/device-manager/storage
    links:
      - mongo
      - redis
      - influxdb
      - timer-proxy
    logging:
      driver: 'json-file'
      options:
        max-size: '100MB'
        max-file: '3'

  client:
    hostname: client
    environment:
      - VUE_APP_NAME=${VUE_APP_NAME}
      - VUE_APP_ROOT_API=${VUE_APP_ROOT_API}
      - VUE_APP_DOMAIN=${VUE_APP_DOMAIN}
      - VUE_APP_SERVER_URL=${VUE_APP_SERVER_URL}
      - VUE_APP_BROKER_URL=${VUE_APP_BROKER_URL}
      - VUE_APP_CLIENT_URL=${VUE_APP_CLIENT_URL}
      - VUE_APP_LOGGER_LEVEL=${VUE_APP_LOGGER_LEVEL}
      - GIT_REPO_SSH_URL=git@framagit.org:aloes/aloes-client.git
    build:
      context: https://framagit.org/aloes/aloes-client.git#master
      dockerfile: local.dockerfile
      args:
        - VUE_APP_NAME=${VUE_APP_NAME}
        - VUE_APP_ROOT_API=${VUE_APP_ROOT_API}
        - VUE_APP_DOMAIN=${VUE_APP_DOMAIN}
        - VUE_APP_SERVER_URL=${VUE_APP_SERVER_URL}
        - VUE_APP_BROKER_URL=${VUE_APP_BROKER_URL}
        - VUE_APP_CLIENT_URL=${VUE_APP_CLIENT_URL}
        - VUE_APP_LOGGER_LEVEL=${VUE_APP_LOGGER_LEVEL}
        - GIT_REPO_SSH_URL=git@framagit.org:aloes/aloes-client.git
    restart: always
    depends_on:
      - api
    ports:
      - '${HTTP_CLIENT_PORT}:${HTTP_CLIENT_PORT}'
    expose:
      - ${HTTP_CLIENT_PORT}
      - ${WS_BROKER_PORT}

  proxy-aloes:
    environment:
      - HTTP_CLIENT_PORT=${HTTP_CLIENT_PORT}
      - HTTP_SERVER_PORT=${HTTP_SERVER_PORT}
      - WS_BROKER_PORT=${WS_BROKER_PORT}
      - NGINX_HTTP_SERVER_HOST=${NGINX_HTTP_SERVER_HOST}
      - NGINX_HTTP_SERVER_PORT=${NGINX_HTTP_SERVER_PORT}
      - NGINX_HTTPS_SERVER_PORT=${NGINX_HTTPS_SERVER_PORT}
    image: 'nginx:latest'
    restart: always
    depends_on:
      - api
      - client
    links:
      - api
      - client
    ports:
      - '${NGINX_HTTP_SERVER_PORT}:${NGINX_HTTP_SERVER_PORT}'
      - '${NGINX_HTTPS_SERVER_PORT}:${NGINX_HTTPS_SERVER_PORT}'
    expose:
      - ${NGINX_HTTP_SERVER_PORT}
      - ${NGINX_HTTPS_SERVER_PORT}
    volumes:
      # - ./config/nginx/nginx-tmp.template:/etc/nginx/nginx.template
      - ./config/nginx/nginx-production.template:/etc/nginx/nginx.template
      - ./log/nginx:/etc/nginx/log
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    command: /bin/bash -c "envsubst '$${HTTP_CLIENT_PORT},$${HTTP_SERVER_PORT},$${WS_BROKER_PORT},$${NGINX_HTTP_SERVER_PORT},$${NGINX_HTTPS_SERVER_PORT},$${NGINX_HTTP_SERVER_HOST},$${NGINX_DOMAIN},$${NGINX_EXTENSION}' < /etc/nginx/nginx.template > /etc/nginx/nginx.conf; while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g 'daemon off;'"

volumes:
  mongovolume:
  redisvolume:
  influxvolume:
  apivolume:
