# Aloes-docker is a process manager to help deploying a complete aloes ecosystem

# Copyright 2019 Edouard Maleix

# Aloes-docker is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
#  any later version.

# Aloes-docker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.

# You should have received a copy of the GNU Affero General Public License
# along with Aloes-docker. If not, see <https://www.gnu.org/licenses/>.

version: "3.7"

networks:
  skyring:
    driver: bridge
  aloes:
    driver: bridge

services:
  mongo:
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_COLLECTION}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
      - MONGO_INITDB_USERNAME=${MONGO_USER}
      - MONGO_INITDB_PASSWORD=${MONGO_PASS}
    image: mongo:4.1.13
    restart: always
    volumes:
      - ./config/mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongovolume:/data/db
    networks:
      - aloes

  influxdb:
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB}
      - INFLUXDB_ADMIN_ENABLED=${INFLUX_ADMIN_ENABLED}
      - INFLUXDB_ADMIN_USER=${INFLUX_ADMIN_USER}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUX_ADMIN_PASSWORD}
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_USER_PASSWORD=${INFLUXDB_USER_PASSWORD}
      - INFLUXDB_REPORTING_DISABLED=true
      - INFLUXDB_BIND_ADDRESS=127.0.0.1:8088
    image: influxdb:1.7-alpine
    restart: always
    volumes:
      - influxvolume:/var/lib/influxdb
    networks:
      - aloes

  redis:
    image: redis:5-alpine
    restart: always
    volumes:
      - redisvolume:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - aloes
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  timer-1:
    # build:
    #   context: https://github.com/esatterwhite/skyring.git#master
    # image: aloes/timer-api:latest
    image: quay.io/esatterwhite/skyring
    hostname: timer-1
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-1
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c

  timer-2:
    image: quay.io/esatterwhite/skyring
    hostname: timer-2
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-2
      - channel__port=3456
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c

  timer-3:
    image: quay.io/esatterwhite/skyring
    hostname: timer-3
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-3
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2

  timer-4:
    image: quay.io/esatterwhite/skyring
    hostname: timer-4
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-4
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2

  timer-5:
    image: quay.io/esatterwhite/skyring
    hostname: timer-5
    restart: always
    environment:
      - DEBUG=*
      - channel__host=timer-5
      - nats__hosts=nats-a:4222,nats-b:4222,nats-c:4222
      - seeds=timer-1:3455,timer-2:3456
      - storage__backend=leveldown
      - storage__path=/var/data/skyring
    networks:
      - skyring
    depends_on:
      - nats-a
      - nats-b
      - nats-c
      - timer-1
      - timer-2
      - timer-3
      - timer-4

  nats-a:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    command: >
      -c /tmp/a.conf -D
    networks:
      - skyring

  nats-b:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    command: >
      -c /tmp/b.conf -D
    depends_on:
      - nats-a
    networks:
      - skyring

  nats-c:
    image: nats:latest
    restart: always
    volumes:
      - ./config/nats:/tmp
    depends_on:
      - nats-a
    command: >
      -c /tmp/c.conf -D
    networks:
      - skyring

  timer-proxy:
    image: nginx:latest
    restart: always
    volumes:
      - ./config/nginx/skyring.conf:/etc/nginx/nginx.conf
    networks:
      - skyring
    depends_on:
      - timer-1
      - timer-2
      - timer-3
      - timer-4
      - timer-5

  async-api-1:
    image: getlarge/aloes-async-api:latest
    hostname: async-api-1
    env_file: ./config/device-manager/.env
    environment:
      - SERVER_LOGGER_LEVEL=4
      - HTTP_INSTANCES_COUNT=6
      - MQTT_INSTANCES_COUNT=2
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
    restart: always
    depends_on:
      - redis
    networks:
      - aloes

  async-api-2:
    image: getlarge/aloes-async-api:latest
    hostname: async-api-2
    env_file: ./config/device-manager/.env
    environment:
      - SERVER_LOGGER_LEVEL=4
      - HTTP_INSTANCES_COUNT=6
      - MQTT_INSTANCES_COUNT=2
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
    restart: always
    depends_on:
      - redis
      - async-api-1
    networks:
      - aloes

  rest-api-1:
    image: getlarge/aloes-rest-api:latest
    hostname: rest-api-1
    env_file: ./config/device-manager/.env
    environment:
      - SERVER_LOGGER_LEVEL=4
      - INSTANCES_COUNT=2
      - INSTANCES_PREFIX=1
      - HTTP_INSTANCES_COUNT=6
      - MQTT_INSTANCES_COUNT=2
    restart: always
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
      - apivolume:/home/node/device-manager/storage
    depends_on:
      - mongo
      - influxdb
      - redis
      - timer-proxy
      - async-api-1
      - async-api-2
    networks:
      - aloes

  rest-api-2:
    image: getlarge/aloes-rest-api:latest
    hostname: rest-api-2
    env_file: ./config/device-manager/.env
    environment:
      - SERVER_LOGGER_LEVEL=4
      - INSTANCES_COUNT=2
      - INSTANCES_PREFIX=2
      - HTTP_INSTANCES_COUNT=6
      - MQTT_INSTANCES_COUNT=2
    restart: always
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
      - apivolume:/home/node/device-manager/storage
    depends_on:
      - mongo
      - influxdb
      - redis
      - timer-proxy
      - async-api-1
      - async-api-2
      - rest-api-1
    networks:
      - aloes

  rest-api-3:
    image: getlarge/aloes-rest-api:latest
    hostname: rest-api-3
    env_file: ./config/device-manager/.env
    environment:
      - SERVER_LOGGER_LEVEL=4
      - INSTANCES_COUNT=2
      - INSTANCES_PREFIX=3
      - HTTP_INSTANCES_COUNT=6
      - MQTT_INSTANCES_COUNT=2
    restart: always
    volumes:
      - ./config/device-manager/.env:/home/node/device-manager/.env:ro
      - apivolume:/home/node/device-manager/storage
    depends_on:
      - mongo
      - influxdb
      - redis
      - timer-proxy
      - async-api-1
      - async-api-2
      - rest-api-1
      - rest-api-2
    networks:
      - aloes

  graphql-api:
    image: getlarge/aloes-graphql-api:latest
    environment:
      - ALOES_ID=${ALOES_ID}
      - ALOES_KEY=${ALOES_KEY}
      # - HTTP_SERVER_HOST=127.0.0.1
      - HTTP_SERVER_PORT=${GRAPHQL_HTTP_SERVER_PORT}
      # - WS_SERVER_HOST=127.0.0.1
      - WS_SERVER_PORT=${GRAPHQL_WS_SERVER_PORT}
      - GRAPHQL_PATH=${GRAPHQL_SERVER_PATH}
      - ALOES_SERVER_URL=${PROXY_HTTP_SERVER_URL}
      - ALOES_SERVER_API_ROOT=${REST_API_ROOT}
      - ALOES_BROKER_SCHEME=mqtt
      - ALOES_BROKER_URL=${PROXY_MQTT_BROKER_URL}
    restart: always
    depends_on:
      - async-api-1
      - async-api-2
      - rest-api-1
      - rest-api-2
      - rest-api-3
    networks:
      - aloes

  client:
    image: getlarge/aloes-client:latest
    environment:
      - PORT=8080
      - VUE_APP_NAME=${APP_NAME}
      - VUE_APP_ROOT_API=${REST_API_ROOT}
      - VUE_APP_DOMAIN=${PROXY_SERVER_HOST}
      - VUE_APP_SERVER_URL=${VUE_APP_SERVER_URL}
      - VUE_APP_BROKER_URL=${VUE_APP_BROKER_URL}
      - VUE_APP_CLIENT_URL=${VUE_APP_CLIENT_URL}
      - VUE_APP_LOGGER_LEVEL=4
      - GIT_REPO_SSH_URL=git@framagit.org:aloes/aloes-client.git
    depends_on:
      - async-api-1
      - async-api-2
      - rest-api-1
      - rest-api-2
      - rest-api-3
    networks:
      - aloes

  certbot:
    image: certbot/certbot
    restart: always
    volumes:
      - ./config/certbot/conf:/etc/letsencrypt
      - ./config/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  aloes-lb-1:
    environment:
      - WS_BROKER_PORT=${WS_BROKER_PORT}
      - MQTT_BROKER_PORT=${MQTT_BROKER_PORT}
      - HTTP_SERVER_PORT=${HTTP_SERVER_PORT}
      - GRAPHQL_HTTP_SERVER_PORT=${GRAPHQL_HTTP_SERVER_PORT}
      - GRAPHQL_WS_SERVER_PORT=${GRAPHQL_WS_SERVER_PORT}
      - GRAPHQL_PATH=${GRAPHQL_SERVER_PATH}
      - PROXY_HTTP_SERVER_PORT=${PROXY_HTTP_SERVER_PORT}
      - PROXY_HTTPS_SERVER_PORT=${PROXY_HTTPS_SERVER_PORT}
      - PROXY_MQTT_BROKER_PORT=${PROXY_MQTT_BROKER_PORT}
      - PROXY_MQTTS_BROKER_PORT=${PROXY_MQTTS_BROKER_PORT}
      - PROXY_SERVER_HOST=${PROXY_SERVER_HOST}
      - PROXY_DOMAIN=${PROXY_DOMAIN}
      - PROXY_EXTENSION=${PROXY_EXTENSION}
      # - PROXY_IP=${PROXY_IP}
    build:
      context: ./config/nginx/
      dockerfile: lb-dockerfile
    restart: always
    volumes:
      - ./config/nginx/${PROXY_CONFIG_TEMPLATE}:/etc/nginx/nginx.template
      - ./log/nginx:/var/log/nginx
      - ./config/certbot/www:/var/www/certbot
      - ./config/certbot/conf:/etc/letsencrypt
    depends_on:
      - async-api-1
      - async-api-2
      - rest-api-1
      - rest-api-2
      - rest-api-3
      - graphql-api
      - client
      - timer-proxy
      - certbot
    ports:
      - "${PROXY_HTTP_SERVER_PORT}:${PROXY_HTTP_SERVER_PORT}"
      - "${PROXY_MQTT_BROKER_PORT}:${PROXY_MQTT_BROKER_PORT}"
      # - '${PROXY_HTTPS_SERVER_PORT}:${PROXY_HTTPS_SERVER_PORT}'
      # - '${PROXY_MQTTS_BROKER_PORT}:${PROXY_MQTTS_BROKER_PORT}'
    networks:
      - aloes
      - skyring

volumes:
  mongovolume:
  redisvolume:
  influxvolume:
  apivolume:
