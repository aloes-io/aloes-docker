# Copyright 2019 Edouard Maleix, read LICENSE

worker_processes 8;

events { 
  worker_connections 2048; 
  # https://itnext.io/how-we-manage-live-1m-graphql-websocket-subscriptions-11e1880758b0
  use epoll;
  multi_accept on;
}

http {

  map $http_origin $cors_header {
    default "";
    "~^https?://[^/]+\.${PROXY_DOMAIN}\.${PROXY_EXTENSION}(:[0-9]+)?$" "$http_origin";
  }

  map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
  }

  map $status $loggable {
    ~^[23]  0;
    default 1;
  }

  map $sent_http_content_type $expires {
    default                       off;
    text/html                     epoch;
    text/css                      max;
    text/javascript               max;
    application/javascript        max;
    font/ttf                      max;
    font/otf                      max;
    font/woff                     max;
    font/woff2                    max;
    application/vnd.ms-fontobject max;
    ~image/                       max;
  }

  map $remote_addr $proxy_forwarded_elem {
    # IPv4 addresses can be sent as-is
    ~^[0-9.]+$          "for=$remote_addr";

    # IPv6 addresses need to be bracketed and quoted
    ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

    # Unix domain socket names cannot be represented in RFC 7239 syntax
    default             "for=unknown";
  }
    
  map $http_forwarded $proxy_add_forwarded {
    # If the incoming Forwarded header is syntactically valid, append to it
    "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

    # Otherwise, replace it
    default "$proxy_forwarded_elem";
  }

  upstream aloes_http_api_servers {
    least_conn;
    server http-api-1:${HTTP_SERVER_PORT} max_fails=3 fail_timeout=15s;
    server http-api-2:${HTTP_SERVER_PORT};
    server http-api-3:${HTTP_SERVER_PORT};
  }

  upstream aloes_ws_api_servers {
    least_conn;
    server mqtt-api-1:${WS_BROKER_PORT};
    server mqtt-api-2:${WS_BROKER_PORT};
  }

  upstream aloes_graphql_api_servers {
    least_conn;
    server graphql-api:${GRAPHQL_HTTP_SERVER_PORT}${GRAPHQL_SERVER_PATH};
  }

  upstream aloes_graphql_ws_api_servers {
    least_conn;
    server graphql-api:${GRAPHQL_WS_SERVER_PORT}${GRAPHQL_SERVER_PATH};
  }

  upstream timer_load_balancers {
    server timer-proxy:80;
  }

  log_format custom_combined '$server_addr - $remote_addr [$time_local] "$request" $status $body_bytes_sent $upstream_addr "$http_referer" "$http_user_agent"';

  access_log /var/log/nginx/http-access.log custom_combined buffer=32k flush=1m;
  error_log /var/log/nginx/http-error.log warn;

  server {
    listen ${PROXY_HTTP_SERVER_PORT};
    listen [::]:${PROXY_HTTP_SERVER_PORT} ipv6only=on;
    server_name ${PROXY_SERVER_HOST};

    location / {
      return 301 https://$server_name$request_uri;
    }

    location /.well-known/acme-challenge/ {
      root /var/www/certbot;
    }
  }

  server {
    listen ${PROXY_HTTPS_SERVER_PORT} ssl;
    listen [::]:${PROXY_HTTPS_SERVER_PORT} ssl ipv6only=on;
    server_name ${PROXY_SERVER_HOST};

    # following statements will be valid after running ./helpers/letsencrypt-init.sh
    ssl_certificate /etc/letsencrypt/live/${PROXY_SERVER_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PROXY_SERVER_HOST}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    real_ip_header      X-Forwarded-For;
    # real_ip_recursive   on;

    include  mime.types;
    types { 
      application/json map; 
    }
    charset utf-8;
    source_charset utf-8;

    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 10;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml;
    gzip_vary on;
    gzip_proxied any; # Compression for all requests.
    # gzip_proxied expired no-cache no-store private auth;
    gzip_disable msie6;

    location / {
      # fix double slashed urls
      # rewrite (.*)//+(.*) $1/$2 break;

      root   /etc/nginx/html;
      index  index.html index.htm;
      try_files $uri $uri/ /index.html;
      expires $expires;
      gzip_static on;
    }

    location /app/ {
      proxy_pass http://aloes_http_api_servers/;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_read_timeout 90;
      proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Forwarded $proxy_add_forwarded;
      proxy_set_header Access-Control-Allow-Origin $cors_header;
    }  

    location /ws {
      proxy_pass http://aloes_ws_api_servers;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_read_timeout 90;
      # proxy_read_timeout 999950s; 
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      # proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Forwarded $proxy_add_forwarded;
      proxy_set_header Access-Control-Allow-Origin $cors_header;
    }

    location /graphql {
      proxy_pass http://aloes_graphql_api_servers;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_read_timeout 90;
      proxy_set_header Host $http_host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    location /subscription {
      proxy_pass http://aloes_graphql_ws_api_servers;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_read_timeout 90;
      # proxy_read_timeout 999950s; 
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $http_host;
      proxy_set_header X-Scheme $scheme;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /timer {
      # todo : only authorize requests coming from aloes containers 
      proxy_pass http://timer_load_balancers;
      proxy_redirect off;
      proxy_http_version 1.1;
      proxy_read_timeout 90;
      proxy_set_header Host $http_host;
      proxy_set_header X-Scheme $scheme;
    }

    error_page   500 502 503 504  /50x.html;
    
    location = /50x.html {
      root   /usr/share/nginx/html;
    }
	}
}

stream {
  log_format mqtt '$server_addr - $remote_addr [$time_local] $protocol $status $bytes_received $bytes_sent $upstream_addr';

  access_log /var/log/nginx/mqtt-access.log mqtt buffer=32k flush=1m;
  error_log /var/log/nginx/mqtt-error.log; # Health check notifications

  upstream aloes_mqtt_api_servers {
    least_conn;
    server mqtt-api-1:${MQTT_BROKER_PORT};
    server mqtt-api-2:${MQTT_BROKER_PORT};
  }

  server {
    listen ${PROXY_MQTT_BROKER_PORT};
    listen [::]:${PROXY_MQTT_BROKER_PORT} ipv6only=on;

    proxy_protocol on;
    proxy_pass aloes_mqtt_api_servers;
    proxy_connect_timeout 2s;
    # proxy_read_timeout 999950s; 
    # proxy_timeout 60s;
    # proxy_socket_keepalive on;
  }


  server {
    listen ${PROXY_MQTTS_BROKER_PORT} ssl;
    listen [::]:${PROXY_MQTTS_BROKER_PORT} ipv6only=on ssl;

    proxy_pass aloes_mqtt_api_servers;
    proxy_protocol on;
    proxy_connect_timeout 5s;
    # proxy_read_timeout 999950s; 
    # proxy_timeout 60s;

    proxy_ssl off;
    # proxy_ssl_name ${PROXY_SERVER_HOST};
    # proxy_ssl_server_name on;

    # following statements will be valid after running ./helpers/letsencrypt-init.sh
    ssl_certificate /etc/letsencrypt/live/${PROXY_SERVER_HOST}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${PROXY_SERVER_HOST}/privkey.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    ssl_protocols         TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers           HIGH:!aNULL:!MD5;
    ssl_session_cache   shared:SSL:20m;
    ssl_session_timeout 8h;
    ssl_handshake_timeout 10s;
    # ssl_session_tickets on;
  }
}